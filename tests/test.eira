spell add(a: NumWeave, b: NumWeave) :: NumWeave {
    mark sum = a + b;
    chant sum;
}

spell multiply(x: NumWeave, y: NumWeave) :: NumWeave {
    mark product = x * y;
    chant product;
}

spell greet(name: TextWeave) :: TextWeave {
    chant "Hello, ";
    chant name;
    chant "!";
}

spell noReturn() {
    chant "No return type specified";
}

chant "=== Testing Spell Return Types ===";
chant "";

chant "Test 1: NumWeave return type spell";
add(5, 7);

chant "";
chant "Test 2: Another NumWeave spell";
multiply(6, 7);

chant "";
chant "Test 3: TextWeave return type spell";
greet("Alice");

chant "";
chant "Test 4: Spell with no return type (EmptyWeave)";
noReturn();

chant "";
chant "=== Testing return value assignment ===";
mark numResult = add(10, 20);
chant "numResult has NumWeave type, current value:";
chant numResult;

chant "";
chant "=== All return type tests completed ===";
